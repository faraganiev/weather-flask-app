import requests
from datetime import datetime

def get_weather_for_city(city):
    # –ì–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ
    geocode_url = f"https://geocoding-api.open-meteo.com/v1/search?name={city}&count=1&language=ru&format=json"
    geo_response = requests.get(geocode_url)
    if geo_response.status_code != 200:
        return {"error": "–û—à–∏–±–∫–∞ –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è"}

    geo_data = geo_response.json()
    results = geo_data.get("results")
    if not results:
        return {"error": "–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω"}

    location = results[0]
    latitude = location["latitude"]
    longitude = location["longitude"]
    country = location.get("country", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")

    # –ü–æ–≥–æ–¥–∞
    weather_url = (
        f"https://api.open-meteo.com/v1/forecast?latitude={latitude}&longitude={longitude}"
        f"&current_weather=true&timezone=auto"
    )
    weather_response = requests.get(weather_url)
    if weather_response.status_code != 200:
        return {"error": "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞"}

    weather_data = weather_response.json().get("current_weather", {})
    if not weather_data:
        return {"error": "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ"}

    # –í—Ä–µ–º—è –≤ —á–µ–ª–æ–≤–µ–∫–æ-—á–∏—Ç–∞–µ–º–æ–º –≤–∏–¥–µ
    iso_time = weather_data.get("time")
    formatted_time = datetime.fromisoformat(iso_time).strftime("%d.%m.%Y, %H:%M") if iso_time else "–ù–µ—Ç –≤—Ä–µ–º–µ–Ω–∏"

    # –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –∫–æ–¥–∞ –ø–æ–≥–æ–¥—ã
    WEATHER_CODES = {
        0: "–Ø—Å–Ω–æ ‚òÄ",
        1: "–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ —è—Å–Ω–æ üå§",
        2: "–ú–∞–ª–æ–æ–±–ª–∞—á–Ω–æ ‚õÖ",
        3: "–û–±–ª–∞—á–Ω–æ ‚òÅ",
        45: "–¢—É–º–∞–Ω üå´",
        48: "–ò–Ω–µ–π–Ω—ã–π —Ç—É–º–∞–Ω ‚ùÑ",
        51: "–õ—ë–≥–∫–∞—è –º–æ—Ä–æ—Å—å üåß",
        61: "–°–ª–∞–±—ã–π –¥–æ–∂–¥—å üå¶",
        80: "–õ–∏–≤–µ–Ω—å üåß",
        95: "–ì—Ä–æ–∑–∞ ‚õà",
    }
    description = WEATHER_CODES.get(weather_data.get("weathercode"), "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")

    return {
        "temperature": weather_data.get("temperature"),
        "windspeed": weather_data.get("windspeed"),
        "time": formatted_time,
        "city": city.title(),
        "country": country,
        "description": description,
        "latitude": latitude,
        "longitude": longitude,
    }
